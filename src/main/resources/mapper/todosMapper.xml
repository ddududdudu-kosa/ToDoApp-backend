<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.todo.todos.mapper.TodosMapper">
	<select id="findTodosByMemberId" resultType="com.todo.todos.domain.Todo">
        SELECT *
        FROM todos
        	WHERE member_id = #{memberId}
    </select>

	<!-- todo 등록하는 로직 -->
	<insert id="insertTodo" parameterType="com.todo.todos.domain.Todo" useGeneratedKeys="true">
	    INSERT INTO todos (
				        contents,
				        t_order,
				        t_date,
				        status,
				        createat,
				        categories_id
    		) VALUES (
				        #{contents},
				        #{order},
				        #{date},
				        '2',  <!-- 기본값으로 '2' 지정 -->
				        SYSDATE,  <!-- 생성 시각은 현재 시각으로 자동 설정 -->
				        #{categoriesId}
    )
	</insert>
	
	<select id="getMaxOrder" resultType="java.lang.Long">
	    SELECT MAX(t_order)
	    FROM todos
		    AND categories_id = #{categoriesId}
	</select>
	
	<update id="reorderTodos">
	    UPDATE todos
	    SET t_order = t_order - 1
	    	WHERE t_order > #{order} 
	    	AND member_id = #{memberId} 
	    	AND categories_id = #{categoriesId}
	</update>
	
	<!--  카테고리별 todos 순서 체크 -->
    <select id="findByTodoMaxOrder" parameterType="long" resultType="long">
    	SELECT COALESCE(MAX(t_order), 0) AS maxOrder 
    		FROM todos 
    		WHERE categories_id = #{categoriesId}
	</select>

    <update id="updateTodo" parameterType="com.todo.todos.domain.Todo">
	    UPDATE todos
		    SET
		        contents = #{contents},
		        t_date = #{date},
		        categories_id = #{categoriesId},
		        updateat = SYSDATE
	    	WHERE id = #{id}
	</update>
	
	<resultMap id="todoResultMap" type="com.todo.todos.domain.Todo">
	    <result property="id" column="id"/>
	    <result property="order" column="t_order"/>
	    <result property="contents" column="contents"/>
	    <result property="date" column="t_date"/>
	    <result property="status" column="status"/>
	    <result property="createAt" column="createat"/>
	    <result property="updateAt" column="updateat"/>
	    <result property="categoriesId" column="categories_id"/>
	</resultMap>

    <select id="findByTodoId" parameterType="long" resultMap="todoResultMap">
        SELECT 
        					id, 
        					t_order, 
        					contents, 
        					t_date, 
        					status, 
        					createat,
        					updateat,
        					categories_id
        	FROM todos
        	WHERE id = #{id}
    </select>

    <delete id="deleteTodo">
        DELETE FROM todos
        	WHERE id = #{id}
    </delete>
    
    <update id="updateOrderOnDelete">
    	UPDATE todos 
    		SET t_order = t_order - 1 
    		WHERE categories_id = #{categoriesId} 
    			AND t_order > #{order}
	</update>
	
	<!-- 일별 todo 조회 -->
	<select id="findTodosByUserIdAndDate" parameterType="map" resultMap="todoResultMap">
	    SELECT t.*
	    FROM todos t
	    JOIN categories c ON t.categories_id = c.id
	    JOIN member m ON c.member_id = m.id
	    WHERE m.id = #{memberId}
	    AND TRUNC(t.t_date) = TRUNC(#{date})
	</select>
	
	
	<!-- 밑에 결과 매핑 설정 --> 
	<resultMap id="checkedTodoResultMap" type="com.todo.todos.domain.CheckedTodoDTO">
	    <result property="memberId" column="member_Id"/>
	    <result property="nickname" column="nickname"/>
	    <result property="profileImg" column="profileimg"/>
	    <result property="privacy" column="privacy"/>
	    <collection property="checkedTodos" ofType="com.todo.todos.domain.TodoDTO">
	        <result property="Cateorder" column="c_order"/>
	        <result property="Todoorder" column="t_order"/>
	        <result property="contents" column="contents"/>
	        <result property="date" column="t_date"/>
	        <result property="color" column="color"/>
	    </collection>
	</resultMap>

	 
	
	<!-- 완성한 todos가 4개 이상인 사용자의 최신 날짜 데이터를 조회 --> 
	<select id="findRecentCompletedTodos" parameterType="map" resultMap="checkedTodoResultMap">

		SELECT 
		    m.id AS member_Id, 
		    m.nickname, 
		    m.profileimg, 
		    m.privacy, 
		    c.c_order,
		    todos.t_order, 
		    todos.contents, 
		    todos.t_date,
		    c.color
		FROM (
		    SELECT 
		        todos.id,
		        todos.t_order,
		        todos.contents,
		        todos.t_date,
		        todos.categories_id,
		        c.c_order,
		        c.member_id,
		        RANK() OVER (PARTITION BY c.member_id ORDER BY todos.t_date DESC) AS rk
		    FROM 
		        todos
		    JOIN categories c ON todos.categories_id = c.id
		    WHERE 
		        todos.status = '1'
		) todos
		JOIN member m ON todos.member_id = m.id AND m.privacy = 'open'
		JOIN categories c ON todos.categories_id = c.id
		WHERE todos.rk = 1
		ORDER BY todos.t_date DESC, todos.c_order ASC, todos.t_order ASC
		OFFSET (#{page} - 1) * #{size} ROWS 
		FETCH NEXT #{size} ROWS ONLY
	</select>

	



	
</mapper>